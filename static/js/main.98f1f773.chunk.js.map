{"version":3,"sources":["utils/StorageHelper.ts","components/Home.tsx","components/Items.tsx","components/List.tsx","components/App.tsx","serviceWorker.js","index.js"],"names":["ListFrame","Date","GetAllLists","lists","JSON","parse","localStorage","getItem","map","list","date","items","item","price","Money","UpdateAllLists","setItem","stringify","UpdateList","listToChangeId","findIndex","l","id","FirstIdAvaiable","ids","find","i","Number","MAX_SAFE_INTEGER","Lists","useState","key","toString","data","setData","dataSource","footer","style","textAlign","to","pathname","state","newList","title","dataIndex","render","value","record","toLocaleDateString","onClick","filter","type","shape","icon","DeleteFilled","Home","Column","Table","Items","updateItems","useReducer","action","dispatchItems","fSubtotal","subtotal","updateSubtotal","findItem","reduce","acc","cur","add","toFixed","size","pagination","newitem","name","quantity","unity","defaultValue","onChange","e","target","min","step","parseInt","parseFloat","nValue","isNaN","EditTitle","dispatch","changeEditing","display","justifyContent","moment","toDate","CheckOutlined","DisplayTitle","toDateString","EditFilled","Title","editing","List","props","useParams","locationState","useLocation","Error","push","GetList","console","error","setState","status","subTitle","extra","Header","Layout","Content","Logo","styled","div","App","locale","className","height","path","children","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.98f1f773.chunk.js","sourcesContent":["import Money from \"bigint-money\";\r\nimport { TypeListItem } from \"./Interfaces\";\r\n\r\nconst ListFrame:TypeListItem = {\"date\":new Date(),\"id\":1,\"items\":[],\"title\":\"Nova Lista\"}\r\n\r\nexport default function GetAllLists():TypeListItem[]{\r\n    let lists:any[] = JSON.parse(localStorage.getItem(\"lists\")||\"[]\");\r\n    lists.map(list=>{\r\n        list.date = new Date(list.date)\r\n        list.items.map((item:any)=>{\r\n            item.price = new Money(item.price[0],item.price[1])\r\n            return item\r\n        })\r\n        return list\r\n    });\r\n    return lists;\r\n}\r\n\r\nexport function GetList(id:number, newList?:boolean):TypeListItem{\r\n    const lists = GetAllLists()\r\n    let list = lists.find(l=>l.id === id)\r\n    if(!list) {\r\n        if(!newList){\r\n            throw new Error (\"Not found\");\r\n        }\r\n        list = ListFrame\r\n        list.id = id;\r\n        lists.push(list);\r\n        UpdateAllLists(lists);\r\n    }\r\n    return list\r\n}\r\n\r\nfunction UpdateAllLists(lists:TypeListItem[]){\r\n    localStorage.setItem(\"lists\",JSON.stringify(lists));\r\n}\r\n\r\nexport function UpdateList(list: TypeListItem){\r\n    let lists = GetAllLists()\r\n    let listToChangeId = lists.findIndex(l=>l.id === list.id)\r\n    lists[listToChangeId] = list;\r\n    UpdateAllLists(lists);\r\n}\r\n\r\nexport function DeleteList(id: number){\r\n    let lists = GetAllLists()\r\n    let filtered = lists.filter(list=>list.id !== id)\r\n    UpdateAllLists(filtered);\r\n}\r\n\r\nexport function FirstIdAvaiable(ids:number[]):number{\r\n    for(let id = 1; id < Number.MAX_SAFE_INTEGER; id++){\r\n        if(!ids.find(i=>i === id)){\r\n            return id\r\n        }\r\n    }\r\n    return 0\r\n}\r\n\r\n//[{\"date\":\"2021-01-11T19:22:34.212Z\",\"id\":1,\"items\":[],\"title\":\"Lista 1\"}]","import React, { useState } from 'react';\r\nimport {\r\n  Link\r\n} from \"react-router-dom\";\r\nimport { Table, Button } from 'antd';\r\nimport { DeleteFilled } from '@ant-design/icons';\r\nimport { TypeListItem } from \"../utils/Interfaces\"\r\nimport 'antd/dist/antd.css';\r\nimport GetAllLists, { DeleteList, FirstIdAvaiable } from '../utils/StorageHelper';\r\nimport Column from 'antd/lib/table/Column';\r\n\r\n\r\n//{date:new Date(),id:1,items:[],title:\"Lista 1\"}\r\n\r\nfunction Home() {\r\n  return <div>\r\n    <h2>Listas</h2>\r\n    <Lists />\r\n  </div>;\r\n}\r\n\r\n\r\nfunction Lists() {\r\n  const [data, setData] = useState(()=>{\r\n    return GetAllLists().map(list=>{list.key = list.id.toString(); return list});\r\n  });\r\n  return <Table dataSource={data}\r\n    footer={() =>\r\n      <div style={{ textAlign: \"center\" }}>\r\n        <Link to={{ pathname: FirstIdAvaiable(data.map(list=>list.id)).toString(), state:{newList:true}}}>\r\n          Adicionar Nova Lista\r\n        </Link>\r\n      </div>}\r\n  >\r\n    <Column title=\"Nome\" dataIndex=\"title\" key=\"title\" render={(value: any, record: TypeListItem) => <Link to={\"/\" + record.id}>{value}</Link>} />\r\n    <Column title=\"Data\" dataIndex=\"date\" key=\"date\" render={(value: any, record: TypeListItem) => <span> {new Date(record.date).toLocaleDateString(\"pt-BR\")} </span>} />\r\n    <Column title=\"\" dataIndex=\"\" key=\"actions\" render={(value: any, record: TypeListItem) => <Button onClick={() => { DeleteList(record.id); setData(GetAllLists()) }} type=\"primary\" shape=\"circle\" icon={<DeleteFilled />} />} />\r\n  </Table>\r\n\r\n}\r\n\r\nexport default Home;\r\n","import { Button, Input, InputNumber, Table } from 'antd';\r\nimport { useReducer, useState } from 'react';\r\nimport { TypeItem, TypeListItem } from '../utils/Interfaces';\r\nimport { DeleteFilled } from '@ant-design/icons';\r\nimport { FirstIdAvaiable } from '../utils/StorageHelper';\r\nimport { Money } from 'bigint-money';\r\n\r\nconst { Column } = Table;\r\n\r\n\r\ninterface TypeItemsProps {\r\n  list: TypeListItem,\r\n  updateItems(items: TypeItem[], list: TypeListItem): TypeItem[]\r\n}\r\nexport default function Items({ list, updateItems }: TypeItemsProps) {\r\n  const reducer = (state: TypeItem[], action: TypeItem[]) =>{return updateItems(action, list)}\r\n  const [items, dispatchItems] = useReducer(reducer, list.items)\r\n  const [subtotal, updateSubtotal] = useState(fSubtotal())\r\n  function findItem(id:number):TypeItem{\r\n    return items[items.findIndex(i => i.id === id)]\r\n  }\r\n  function fSubtotal(){\r\n    return items.reduce((acc,cur)=>cur.price.add(acc), new Money(0,\"BRL\")).toFixed(2)\r\n  }\r\n  return (\r\n    <Table \r\n    size=\"small\" \r\n    pagination={false} \r\n    dataSource={items} \r\n    title={\r\n      ()=>(\r\n        <span>\r\n          SubTotal: {subtotal}\r\n        </span>\r\n      )\r\n    }\r\n    footer={() =>\r\n      <div style={{ textAlign: \"center\" }}>\r\n        <Button \r\n        type=\"link\"\r\n        onClick={()=>{\r\n          const newitem:TypeItem = {\r\n            id: FirstIdAvaiable(items.map(i=>i.id)),\r\n            name:\"\",\r\n            price:new Money(0,\"BRL\"),\r\n            quantity:1,\r\n            unity:\"\"\r\n          }\r\n          dispatchItems([...items, newitem]);\r\n        }} >\r\n          Adicionar Novo Item\r\n        </Button>\r\n      </div>}\r\n    >\r\n      <Column title=\"Produto\" dataIndex=\"name\" key=\"name\" render={(value, record: TypeItem) => (\r\n        <Input \r\n          defaultValue = {value}\r\n          onChange={(e) => {\r\n            findItem(record.id).name = e.target.value;\r\n            dispatchItems(items)\r\n          }}/>\r\n      )} />\r\n      <Column title=\"Quantidade\" dataIndex=\"quantity\" key=\"quantity\" render={(value, record: TypeItem) => (\r\n        <InputNumber  \r\n          defaultValue = {value}\r\n          min={0} \r\n          step={0.1}\r\n          onChange={(value) => {\r\n            if(value){\r\n              findItem(record.id).quantity = \r\n                typeof(value) === \"string\" ?\r\n                parseInt(value, 10):\r\n                value;\r\n              dispatchItems(items)\r\n            }\r\n          }}/>\r\n      )} />\r\n      <Column title=\"Unidade\" dataIndex=\"unity\" key=\"unity\" render={(value, record: TypeItem) => (\r\n        <Input \r\n          defaultValue = {value}\r\n          onChange={(e) => {\r\n            findItem(record.id).unity = e.target.value;\r\n            dispatchItems(items)\r\n          }}/>\r\n      )} />\r\n      <Column title=\"Preço\" dataIndex=\"price\" key=\"price\" render={(value:Money, record: TypeItem) => (\r\n        <InputNumber  \r\n          defaultValue = {Number.parseFloat(value.toFixed(2))}\r\n          min={0} \r\n          step={0.01}\r\n          onChange={(value) => {\r\n            if(!value){\r\n              return\r\n            }\r\n            let nValue = Number.parseFloat(value.toString())\r\n            if(!Number.isNaN(nValue)){\r\n              findItem(record.id).price = new Money(nValue.toString(), \"BRL\")\r\n              dispatchItems(items)\r\n              updateSubtotal(fSubtotal())\r\n            }\r\n            \r\n          }}/>\r\n      )} />\r\n      <Column\r\n        title=\"Ações\"\r\n        dataIndex=\"actions\"\r\n        key=\"actions\"\r\n        render={(value, record: TypeItem) => (\r\n          <Button onClick={() => { dispatchItems(items.filter(i => i.id !== record.id)) }} type=\"primary\" shape=\"circle\" icon={<DeleteFilled />} />)}\r\n      />\r\n    </Table>\r\n  )\r\n}\r\n\r\n/*\r\n[{\"date\":\"2021-01-12T03:18:34.754Z\",\"id\":1,\"items\":[{\"id\":1, \"name\":\"Alho\", \"unity\":\"Kg\", \"quantity\":1,\"price\":5.36}],\"title\":\"Nova Lista\"},\r\n{\"date\":\"2021-01-12T03:18:34.754Z\",\"id\":2,\"items\":[],\"title\":\"Nova Lista\"}]\r\n*/","import React, { useState } from 'react';\r\nimport {\r\n  Link, useLocation, useParams\r\n} from \"react-router-dom\";\r\nimport { Input, Button, DatePicker, Tooltip,  Result } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport { TypeItem, TypeListItem } from '../utils/Interfaces';\r\nimport { EditFilled, CheckOutlined } from '@ant-design/icons';\r\nimport moment from 'moment';\r\nimport Items from './Items';\r\nimport { GetList, UpdateList } from '../utils/StorageHelper';\r\n\r\n\r\ninterface TypeTitle { state: TypeListItem | undefined, dispatch: Function, id?: number, changeEditing?: Function }\r\n\r\nfunction EditTitle({ state, dispatch, changeEditing }: TypeTitle) {\r\n  return state && changeEditing ? <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n    <span>\r\n      <Input value={state.title} onChange={(e) => dispatch({ ...state, title: e.target.value })}></Input>\r\n      <DatePicker value={moment(state.date)} onChange={(e) => dispatch({ ...state, date: e?.toDate() })} />\r\n    </span>\r\n    <Tooltip title=\"Editar\">\r\n      <Button onClick={() => { UpdateList(state); changeEditing(false) }} type=\"primary\" shape=\"circle\" icon={<CheckOutlined />} />\r\n    </Tooltip>\r\n  </div> : <></>\r\n}\r\n\r\nfunction DisplayTitle({ state, dispatch, changeEditing }: TypeTitle) {\r\n  return state && changeEditing ? <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n    <span>\r\n      <h2>\r\n        {state.title}\r\n      </h2>\r\n      <h4>{state.date.toDateString()}</h4>\r\n    </span>\r\n    <Tooltip title=\"Concluir\">\r\n      <Button onClick={() => changeEditing(true)} type=\"primary\" shape=\"circle\" icon={<EditFilled />} />\r\n    </Tooltip>\r\n  </div> : <></>\r\n}\r\nfunction Title({ state, dispatch, id }: TypeTitle) {\r\n  const [editing, changeEditing] = useState(false)\r\n\r\n  return editing ?\r\n    <EditTitle state={state} dispatch={dispatch} changeEditing={changeEditing} /> :\r\n    <DisplayTitle state={state} dispatch={dispatch} changeEditing={changeEditing} />;\r\n}\r\n\r\nfunction updateItems(items:TypeItem[], list:TypeListItem):TypeItem[]{\r\n  list.items = items;\r\n  UpdateList(list);\r\n  return items;\r\n}\r\n\r\nexport default function List(props: any) {\r\n  let id = parseInt(useParams<{ id: string }>().id, 10);\r\n  let locationState = useLocation<any>().state\r\n  const [state, setState] = useState(() => {\r\n    let list\r\n    try {\r\n      list = GetList(id, locationState?.newList)\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n    return list\r\n  });\r\n  return (\r\n    state ?\r\n    <>\r\n      <Title state={state} dispatch={setState} id={id} />\r\n      <Items list={state} updateItems={updateItems} />\r\n    </> :\r\n    <Result\r\n      status=\"404\"\r\n      title=\"404\"\r\n      subTitle=\"Sinto muito, essa página não existe.\"\r\n      extra={<Link to=\"\"><Button type=\"primary\">Voltar para o inicio</Button></Link>}\r\n    />\r\n\r\n  );\r\n}","import React from 'react';\nimport styled from 'styled-components'\nimport {\n\tBrowserRouter as Router,\n\tSwitch,\n\tRoute,\n\tLink,\n\t\n} from \"react-router-dom\";\nimport 'antd/dist/antd.css';\nimport { ConfigProvider, Layout } from 'antd';\nimport Home from './Home';\nimport List from './List';\nimport 'moment/locale/pt-br';\nimport locale from 'antd/lib/locale/pt_BR';\n\nconst { Header, Content,  } = Layout;\n\nconst Logo = styled.div`\nfont-weight: bold;\nfont-size: x-large;\ncolor: white;\nfloat: left;\nwidth: 120px;\nheight: 31px;\nmargin: 16px 24px 16px 0;\njustify-content: center;\nalign-items: center;\ndisplay: flex;\nfont-family: 'Montserrat Alternates', sans-serif;\n`;\n\n\nfunction App() {\n\treturn (\n\t\t<ConfigProvider locale={locale}>\n\t\t\t<Router>\n\t\t\t\t<Layout className=\"layout\" style={{ height: \"100%\" }}>\n\t\t\t\t\t<Header>\n\t\t\t\t\t\t<Link to=\"/\"><Logo>Listaria</Logo></Link>\n\n\t\t\t\t\t</Header>\n\t\t\t\t\t<Content>\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route path=\"/:id\" children={<List />} />\n\t\t\t\t\t\t\t<Route path=\"/\">\n\t\t\t\t\t\t\t\t<Home />\n\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</Content>\n\t\t\t\t</Layout>\n\t\t\t</Router>\n\t\t</ConfigProvider>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}